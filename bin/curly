#!/usr/bin/env python

import os, sys, yaml, json
import lib, subprocess

def find_env_files(rf):
  file_name = "env.yml"
  env_files = []
  cur_dir = os.path.dirname(os.path.abspath(rf))

  while True:
    file_list = os.listdir(cur_dir)
    parent_dir = os.path.dirname(cur_dir)
    if file_name in file_list:
      env_files.append(os.path.join(cur_dir, file_name))
      cur_dir = parent_dir
      continue
    else:
      if cur_dir == parent_dir:
        break
      else:
        cur_dir = parent_dir

  return env_files

def main(argv):
  cwd = os.getcwd()
  request_file = argv[1:][0]

  env_files = find_env_files(request_file)
  print(env_files)

  data = {}

  for env_file in env_files:
    with open(env_file) as f:
      x = yaml.load(f, Loader=yaml.FullLoader)
      lib.update(data, x, True)

  with open(request_file) as f:
    x = yaml.load(f, Loader=yaml.FullLoader)
    lib.update(data, x, True)

  rpath = [data['host'].strip("/\\")]

  if 'api_prefix' in data:
    rpath.append(data['api_prefix'].strip("/\\"))
  rpath.append(data['path'].strip("/\\"))

  cmd = [data['protocol'] if 'protocol' in data else 'http']

  if not 'body' in data:
    cmd.append("--ignore-stdin")

  cmd.extend([
    "--check-status",
    "--timeout=180",
    data['method'] if 'method' in data else 'GET',
    f"{'/'.join(rpath)}"
  ])

  if 'body' in data:
    cmd.extend([
      "--raw",
      f"'{json.dumps(data['body'])}'"
    ])

  if 'form' in data:
    for k in data['form'].keys():
      cmd.append(f"{k}=\'{data['form'][k]}\'")

  if 'query' in data:
    for k in data['query'].keys():
      if isinstance(data['query'][k], list):
        for q in data['query'][k]:
          cmd.append(f"{k}=={q}")
      else:
        cmd.append(f"{k}=={data['query'][k]}")

  if 'headers' in data:
    for k in data['headers'].keys():
      cmd.append(f"{k}:{data['headers'][k]}")

  if 'args' in data:
    for v in data['args']:
      cmd.append(v)
  
  print(">>>>")
  print(" ".join(cmd))
  print("<<<<")
  
  subprocess.run(cmd, capture_output=False)

if __name__ == "__main__":
  main(sys.argv)

